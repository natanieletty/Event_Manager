@using System.Security.Claims
@using Lesson24_Exam.Interfaces
@using Lesson24_Exam.ModelFilters
@model Page<User>
@{
	ViewData["Title"] = ViewBag.Event.Title;
	if (User.IsInRole("admin"))
	{
		Layout = "_AdminLayout";
	}
}

<div>
	<a asp-action="Index" class="@(User.IsInRole("admin") ? "text-white " : "")page-nav-link">Events</a>
	/
	<span asp-action="Details" class="@(User.IsInRole("admin") ? "text-white " : "")text-decoration-underline">Details</span>
</div>
<h1 class="text-center">@ViewBag.Event.Title (<strong>@ViewBag.Event.Users.Count</strong> participants)</h1>
<div class="container@(User.IsInRole("admin") ? " d-flex justify-content-between" : "")">
	<div class="w-50 m-auto">
		@if (User.IsInRole("admin"))
		{
			<h2 class="h1 text-center text-warning">Event</h2>
		}
		<form class="p-3 w-100 rounded rounded-3 bg-@(User.IsInRole("admin") ? "warning" : "primary")">
			<div class="mb-3">
				<label for="Event.Title" class="control-label">Title</label>
				<input name="Event.Title" value="@ViewBag.Event.Title" class="form-control" readonly />
			</div>
			<div class="mb-3">
				<label for="Event.Description" class="control-label">Description</label>
				<textarea name="Event.Description" class="form-control" readonly>@ViewBag.Event.Description</textarea>
			</div>
			<div class="mb-3">
				<label for="Event.DateTime" class="control-label">DateTime</label>
				<input name="Event.DateTime" value="@ViewBag.Event.DateTime" class="form-control" readonly />
			</div>
			<div class="mb-3">
				<label for="Event.MaxParticipants" class="control-label">MaxParticipants</label>
				<input name="Event.MaxParticipants" value="@ViewBag.Event.MaxParticipants" class="form-control" readonly />
			</div>
			<div class="mb-3">
				<label for="Event.Category" class="control-label">Category</label>
				<select name="Event.Category" value="@ViewBag.Event.Category" asp-items="Html.GetEnumSelectList<EventType>()" class="form-select" disabled></select>
			</div>
			<div class="mb-3">
				<input type="checkbox" name="Event.IsPublic" checked="@ViewBag.Event.IsPublic" class="form-check-inline" disabled />
				<label for="Event.IsPublic" class="control-label">IsPublic</label>
			</div>
		</form>
	</div>
	@if (User.IsInRole("admin"))
	{
		<div>
			<table class="table table-striped table-hover table-warning w-25">
				<thead>
					<tr>
						<td colspan="4" class="text-center">Users</td>
					</tr>
					<tr>
						<td>Login</td>
						<td>Email</td>
						<td>Phone</td>
						<td>Actions</td>
					</tr>
				</thead>
				<tbody>
					@foreach (EventUserViewModel user in Model.PageContent.Select(e => new EventUserViewModel(ViewBag.Event, e)))
					{
						<tr>
							<td>@user.User.UserName</td>
							<td>@user.User.Email</td>
							<td>@user.User.PhoneNumber</td>
							<td>
								@if (user.IsRegistered)
								{
									<form asp-action="UnregisterUser" method="get">
										<input type="hidden" name="EventId" value="@ViewBag.Event.Id.ToString()" />
										<input type="hidden" name="Username" value="@user.User.UserName" />
										<button type="submit" class="btn btn-danger">Unregister</button>
									</form>
								}
								else
								{
									<form asp-action="RegisterUser" method="get">
										<input type="hidden" name="EventId" value="@ViewBag.Event.Id.ToString()" />
										<input type="hidden" name="Username" value="@user.User.UserName" />
										<button type="submit" class="btn btn-success" @((ViewBag.Event.MaxParticipants <= ViewBag.Event.Users.Count) ? " disabled" : "")>@((ViewBag.Event.MaxParticipants <= ViewBag.Event.Users.Count) ? "Max participants" : "Register")</button>
									</form>
								}
							</td>
						</tr>
					}
				</tbody>
			</table>
			<form asp-route-id="@ViewBag.Event.Id" method="get">
				<div class="btn-toolbar justify-content-center gap-3">
					<div class="btn-group">
						<button name="@nameof(Model.PageIndex)" type="submit" value="@(Model.PageIndex - 1)" class="btn btn-outline-primary" @(Model.HasPrevious ? "" : " disabled")>←</button>
						<button type="submit" class="btn btn-primary" disabled>@Model.PageNumber/@Model.TotalPages (@(Model.PageIndex * Model.PageSize + 1)-@(Model.PageIndex * Model.PageSize + Model.PageItems)/@Model.TotalItems)</button>
						<button name="@nameof(Model.PageIndex)" type="submit" value="@(Model.PageIndex + 1)" class="btn btn-outline-primary" @(Model.HasNext ? "" : " disabled")>→</button>
					</div>
					<div class="btn-group">
						<button type="button" class="btn btn-@(Model.Filter.IsActive ? "" : "outline-")warning" data-bs-toggle="modal" data-bs-target="#filterModal">Filter</button>
					</div>
				</div>
				<div id="filterModal" class="modal" tabindex="-1">
					<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
						<div class="modal-content bg-warning">
							<div class="modal-header">
								<h5 class="modal-title">Filter</h5>
								<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
							</div>
							<div class="modal-body">
								<div class="mb-3">
									<label for="@nameof(UserFilter.Login)" class="control-label">Login</label>
									<input name="@nameof(UserFilter.Login)" value="@((Model.Filter as UserFilter).Login)" class="form-control" />
								</div>
								<div class="mb-3">
									<label for="@nameof(UserFilter.Email)" class="control-label">Email</label>
									<input name="@nameof(UserFilter.Email)" value="@((Model.Filter as UserFilter).Email)" class="form-control" />
								</div>
								<div class="mb-3">
									<label for="@nameof(UserFilter.Phone)" class="control-label">Phone</label>
									<input name="@nameof(UserFilter.Phone)" value="@((Model.Filter as UserFilter).Phone)" class="form-control" />
								</div>
							</div>
							<div class="modal-footer">
								<button type="button" class="btn btn-outline-light" data-bs-dismiss="modal">Cancel</button>
								<button type="reset" class="btn btn-danger">Reset</button>
								<button type="submit" class="btn btn-primary">Apply</button>
							</div>
						</div>
					</div>
				</div>
			</form>
		</div>
	}
</div>