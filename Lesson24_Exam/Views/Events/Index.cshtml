@using System.Security.Claims
@using Lesson24_Exam.Interfaces
@using Lesson24_Exam.ModelFilters
@model Page<Event>
@{
	ViewData["Title"] = User.IsInRole("admin") ? "Manage Events" : "Events";
	if (User.IsInRole("admin"))
	{
		Layout = "_AdminLayout";
	}
}

<div>
	<span class="@(User.IsInRole("admin") ? "text-white " : "")text-decoration-underline">Events</span>
</div>
<h1 class="text-center">@(User.IsInRole("admin") ? "Manage events" : "Public events")</h1>
@if (User.IsInRole("admin"))
{
	<a asp-action="Add" class="btn btn-success w-100 mb-2">Add event</a>
}
<table class="table table-striped table-hover table-@(User.IsInRole("admin") ? "warning" : "primary")">
	<thead>
		<tr>
			<td>Title</td>
			<td>Description</td>
			<td>Date</td>
			<td>Category</td>
			@if (User.IsInRole("admin"))
			{
				<td>Public</td>
			}
			<td>Participants</td>
			<td>Max participants</td>
			<td>Actions</td>
		</tr>
	</thead>
	<tbody>
		@foreach (UserEventViewModel eventt in Model.PageContent.Select(e => new UserEventViewModel(ViewBag.User, e)))
		{
			<tr>
				<td>@eventt.Event.Title</td>
				<td>@eventt.Event.Description</td>
				<td>@eventt.Event.DateTime</td>
				<td>@eventt.Event.Category</td>
				@if (User.IsInRole("admin"))
				{
					<td>@(eventt.Event.IsPublic ? "✓" : "✗")</td>
				}
				<td>@eventt.Event.Users.Count</td>
				<td>@eventt.Event.MaxParticipants</td>
				@if (User.IsInRole("admin"))
				{
					<td>
						<form asp-action="Details" id="details-@eventt.Event.Id" method="get">
							<input type="hidden" name="Id" value="@eventt.Event.Id" />
						</form>
						<form asp-action="Register" id="register-@eventt.Event.Id" method="get">
							<input type="hidden" name="Id" value="@eventt.Event.Id" />
						</form>
						<form asp-action="Edit" id="edit-@eventt.Event.Id" method="get">
							<input type="hidden" name="Id" value="@eventt.Event.Id" />
						</form>
						<form asp-action="Delete" id="delete-@eventt.Event.Id" method="get">
							<input type="hidden" name="Id" value="@eventt.Event.Id" />
						</form>
						<div class="btn-group">
							<button type="submit" form="details-@eventt.Event.Id" class="btn btn-secondary">Details</button>
							<button type="submit" form="register-@eventt.Event.Id" class="btn btn-success" @((eventt.Event.MaxParticipants <= eventt.Event.Users.Count || eventt.IsRegistered) ? " disabled" : "")>@(eventt.IsRegistered ? $"Registered" : ((eventt.Event.MaxParticipants <= eventt.Event.Users.Count) ? "Max participants" : "Register"))</button>
							<button type="submit" form="edit-@eventt.Event.Id" class="btn btn-primary">Edit</button>
							<button type="submit" form="delete-@eventt.Event.Id" class="btn btn-outline-danger">Delete</button>
						</div>
					</td>
				}
				else
				{
					<td>
						<form asp-action="Details" id="details-@eventt.Event.Id" method="get">
							<input type="hidden" name="Id" value="@eventt.Event.Id" />
						</form>
						<form asp-action="Register" id="register-@eventt.Event.Id" method="get">
							<input type="hidden" name="Id" value="@eventt.Event.Id" />
						</form>
						<div class="btn-group">
							<button type="submit" form="details-@eventt.Event.Id" class="btn btn-secondary">Details</button>
							<button type="submit" form="register-@eventt.Event.Id" class="btn btn-success" @((eventt.Event.MaxParticipants <= eventt.Event.Users.Count || eventt.IsRegistered) ? " disabled" : "")>@(eventt.IsRegistered ? $"Registered" : ((eventt.Event.MaxParticipants <= eventt.Event.Users.Count) ? "Max participants" : "Register"))</button>
						</div>
					</td>
				}
			</tr>
		}
	</tbody>
</table>
<form method="get">
	<div class="btn-toolbar justify-content-center gap-3">
		<div class="btn-group">
			<button name="@nameof(Model.PageIndex)" type="submit" value="@(Model.PageIndex - 1)" class="btn btn-outline-primary" @(Model.HasPrevious ? "" : " disabled")>←</button>
			<button type="submit" class="btn btn-primary" disabled>@Model.PageNumber/@Model.TotalPages (@(Model.PageIndex * Model.PageSize + 1)-@(Model.PageIndex * Model.PageSize + Model.PageItems)/@Model.TotalItems)</button>
			<button name="@nameof(Model.PageIndex)" type="submit" value="@(Model.PageIndex + 1)" class="btn btn-outline-primary" @(Model.HasNext ? "" : " disabled")>→</button>
		</div>
		<div class="btn-group">
			<button type="button" class="btn btn-@(Model.Filter.IsActive ? "" : "outline-")warning" data-bs-toggle="modal" data-bs-target="#filterModal">Filter</button>
		</div>
	</div>
	<div id="filterModal" class="modal" tabindex="-1">
		<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
			<div class="modal-content bg-warning">
				<div class="modal-header">
					<h5 class="modal-title">Filter</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<div class="mb-3">
						<label for="@nameof(EventFilter.Title)" class="control-label">Title</label>
						<input name="@nameof(EventFilter.Title)" value="@((Model.Filter as EventFilter).Title)" class="form-control" />
					</div>
					<div class="mb-3">
						<label class="control-label">DateTime</label>
						<input type="datetime-local" name="@nameof(EventFilter.DateTimeFrom)" value="@((Model.Filter as EventFilter).DateTimeFrom)" placeholder="From" class="form-control" />
						<input type="datetime-local" name="@nameof(EventFilter.DateTimeTo)" value="@((Model.Filter as EventFilter).DateTimeTo)" placeholder="To" class="form-control" />
					</div>
					<div class="mb-3">
						<label class="control-label">Participants</label>
						<input type="number" name="@nameof(EventFilter.MinParticipants)" value="@((Model.Filter as EventFilter).MinParticipants)" placeholder="From" class="form-control" />
						<input type="number" name="@nameof(EventFilter.MaxParticipants)" value="@((Model.Filter as EventFilter).MaxParticipants)" placeholder="To" class="form-control" />
					</div>
					<div class="mb-3">
						<label class="control-label">Max participants</label>
						<input type="number" name="@nameof(EventFilter.MinMaxParticipants)" value="@((Model.Filter as EventFilter).MinMaxParticipants)" placeholder="From" class="form-control" />
						<input type="number" name="@nameof(EventFilter.MaxMaxParticipants)" value="@((Model.Filter as EventFilter).MaxMaxParticipants)" placeholder="To" class="form-control" />
					</div>
					<div class="mb-3">
						<label for="@nameof(EventFilter.SelectedCategories)" class="control-label">Categories</label>
						<select name="@nameof(EventFilter.SelectedCategories)" class="form-select" multiple>
							@foreach (SelectListItem item in (Model.Filter as EventFilter).CategoriesSelectList)
							{
								<option value="@item.Value" selected="@item.Selected">@item.Text</option>
							}
						</select>
					</div>
					@if (User.IsInRole("admin"))
					{
						<div class="mb-3">
							<label for="@nameof(EventFilter.IsPublic)" class="control-label">Accessibility</label>
							<select name="@nameof(EventFilter.IsPublic)" class="form-select">
								<option value="0" selected="@((Model.Filter as EventFilter).IsPublic == 0)">All</option>
								<option value="1" selected="@((Model.Filter as EventFilter).IsPublic == 1)">Public</option>
								<option value="-1" selected="@((Model.Filter as EventFilter).IsPublic == -1)">Private</option>
							</select>
						</div>
					}
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-outline-light" data-bs-dismiss="modal">Cancel</button>
					<button type="reset" class="btn btn-danger">Reset</button>
					<button type="submit" class="btn btn-primary">Apply</button>
				</div>
			</div>
		</div>
	</div>
</form>